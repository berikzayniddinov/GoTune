syntax = "proto3";

package users;

option go_package = "gotune/users/proto;userspb";

service UserService {
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser (LoginUserRequest) returns (LoginUserResponse);
  rpc GetAllUsers (GetAllUsersRequest) returns (GetAllUsersResponse);
  rpc GetUser (GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse);
  rpc DeleteAllUsersCache (DeleteAllUsersCacheRequest) returns (DeleteAllUsersCacheResponse);
  rpc ConfirmUser (ConfirmUserRequest) returns (ConfirmUserResponse);
}


message RegisterUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterUserResponse {
  string user_id = 1;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
}

message LoginUserResponse {
  string token = 1;
}

message GetAllUsersRequest {}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  int64 created_at = 4;
}

message GetAllUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  string user_id = 1;
  string username = 2;
  string email = 3;
}

message UpdateUserRequest {
  string user_id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
}

message UpdateUserResponse {
  bool success = 1;
}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}
message DeleteAllUsersCacheRequest {}

message DeleteAllUsersCacheResponse {
  bool success = 1;
}
message ConfirmUserRequest {
  string email = 1;
  string code = 2; 
}

message ConfirmUserResponse {
  bool success = 1;
  string message = 2;
}